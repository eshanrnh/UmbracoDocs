name: Check Links in Pull Requests

on:
  pull_request:
    branches:
      - main
    paths:
      - '**/*.md'

jobs:
  check-links:
    runs-on: ubuntu-latest

    steps:
      # 1Ô∏è‚É£ Checkout repository
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # 2Ô∏è‚É£ Get changed Markdown files
      - name: Get changed Markdown files
        id: changed-files
        run: |
          CHANGED_FILES=$(git diff --name-only ${{ github.event.pull_request.base.sha }} ${{ github.sha }} | grep '\.md$' || true)
          # Remove numeric prefixes like "16/" from paths
          CHANGED_FILES=$(echo "$CHANGED_FILES" | sed 's/^[0-9]\+\/\(.*\)/\1/')
          CHANGED_FILES=$(echo "$CHANGED_FILES" | tr '\n' ' ')  # space-separated
          echo "CHANGED_FILES=$CHANGED_FILES" >> $GITHUB_ENV
          echo "Changed Markdown files: $CHANGED_FILES"

      # 3Ô∏è‚É£ Skip if no Markdown files changed
      - name: Skip if no changed Markdown files
        if: env.CHANGED_FILES == ''
        run: |
          echo "No Markdown files changed. Skipping link check."
          exit 0

      # 4Ô∏è‚É£ Run Lychee (detailed output)
      - name: Run Lychee
        id: run-lychee
        uses: lycheeverse/lychee-action@v2
        with:
          args: |
            --no-progress
            --include-fragments
            --format detailed
            ${{ env.CHANGED_FILES }}
          output: lychee/out_raw.md
          fail: false

      # 5Ô∏è‚É£ Format Lychee output for user-friendly PR comment
      - name: Format Lychee report
        id: format-report
        if: always()
        run: |
          mkdir -p lychee
          echo "üö® **Link Checker found issues in this PR**" > lychee/comment.md
          echo "" >> lychee/comment.md

          awk '
            # Extract file name from "Errors in ..." lines
            /^Errors in / {
              file=$3
              print "\n**File:** " file >> "lychee/comment.md"
              next
            }

            # Broken 404 links (line may be missing)
            /\[404\]/ {
              url=$2
              if (match($0, /line:([0-9]+)/, m)) { line=m[1] } else { line="?" }
              print "- ‚ùå 404 Not Found ‚Üí " url " (line " line ")" >> "lychee/comment.md"
              next
            }

            # Missing fragment/anchor
            /Cannot find fragment/ {
              if (match($0, /file:\/\/.*\/(.*\.md)#([^\s]+)/, m)) {
                file=m[1]; anchor=m[2]; line="?"
                print "- ‚öì Anchor not found ‚Üí " file "#" anchor " (line " line ")" >> "lychee/comment.md"
              }
              next
            }

            # Redirects
            /\[301\]|\[302\]/ {
              if (match($0, /\[(301|302)\] ([^|]+)( \| .*)?/, m)) {
                code=m[1]; url=m[2]; line="?"
                print "- üîÄ Redirected (" code ") ‚Üí " url " (line " line ")" >> "lychee/comment.md"
              }
              next
            }

            # Timeout
            /Timeout/ {
              if (match($0, /Timeout ([^|]+)/, m)) {
                url=m[1]; line="?"
                print "- ‚è≥ Timeout ‚Üí " url " (line " line ")" >> "lychee/comment.md"
              }
              next
            }
          ' lychee/out_raw.md

          # Mark if issues exist
          if [ -s lychee/comment.md ]; then
            echo "has_issues=true" >> $GITHUB_ENV
          else
            echo "has_issues=false" >> $GITHUB_ENV
          fi

      # 6Ô∏è‚É£ Comment broken links on PR
      - name: Comment broken links
        if: always() && env.has_issues == 'true'
        uses: marocchino/sticky-pull-request-comment@v2
        with:
          path: lychee/comment.md
          recreate: true

      # 7Ô∏è‚É£ Fail workflow if broken links
      - name: Fail workflow if broken links
        if: env.has_issues == 'true'
        run: |
          echo "‚ùå Broken links detected. Please review the PR comment for details."
          exit 1
