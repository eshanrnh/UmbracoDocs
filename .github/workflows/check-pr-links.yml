name: Check Links In Pull Requests

on:
  pull_request:
    branches:
      - main
    paths:
      - '**/*.md'

jobs:
  check-links:
    runs-on: ubuntu-latest
    steps:
      # Checkout repository
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # Get changed Markdown files
      - name: Get changed Markdown files
        id: changed-files
        run: |
          base_sha="${{ github.event.pull_request.base.sha }}"
          head_sha="${{ github.sha }}"
          files=$(git diff --name-only "$base_sha" "$head_sha" | grep '\.md$' || true)

          echo "CHANGED_FILES<<EOF" >> $GITHUB_ENV
          echo "$files" >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV

          echo "Changed Markdown files:"
          echo "$files"

      # Skip if no Markdown files
      - name: Skip if no Markdown files changed
        if: ${{ env.CHANGED_FILES == '' }}
        run: |
          echo "No Markdown files changed. Skipping link check."
          exit 0

      # Install Lychee
      - name: Install Lychee
        run: cargo install lychee

      # Extract unique URLs and run Lychee
      - name: Run Lychee on changed URLs
        id: lychee
        run: |
          rm -f lychee-full-report.txt lychee-broken.txt urls-to-check.txt

          # Extract all unique URLs from changed Markdown files
          grep -hoE 'https?://[^) ]+' $CHANGED_FILES | sort -u > urls-to-check.txt

          # Run Lychee on all URLs at once (concurrent)
          lychee --no-progress $(cat urls-to-check.txt) >> lychee-full-report.txt 2>&1 || true

          # Extract broken links (deduplicated)
          grep -E "❌|ERROR|\[404\]" lychee-full-report.txt | sort -u > lychee-broken.txt || true

          # Placeholder if no broken links
          if [ ! -s lychee-broken.txt ]; then
            echo "✅ No broken links found." > lychee-broken.txt
          fi

          # Save env variables
          echo "full_report=lychee-full-report.txt" >> $GITHUB_ENV
          echo "broken_report=lychee-broken.txt" >> $GITHUB_ENV

          # Flag for broken links
          if grep -q -E "❌|ERROR|\[404\]" lychee-broken.txt; then
            echo "broken_links=true" >> $GITHUB_ENV
          else
            echo "broken_links=false" >> $GITHUB_ENV
          fi

      # Comment broken links on PR
      - name: Comment broken links on PR
        uses: marocchino/sticky-pull-request-comment@v2
        with:
          path: lychee-broken.txt
          recreate: true

      # Upload full report artifact
      - name: Upload full report artifact
        uses: actions/upload-artifact@v4
        with:
          name: lychee-full-report
          path: lychee-full-report.txt
          retention-days: 7

      # Fail workflow if broken links exist
      - name: Fail workflow if broken links
        if: env.broken_links == 'true'
        run: |
          echo "❌ Broken links detected. Failing workflow."
          exit 1
